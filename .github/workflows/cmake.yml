name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Download and unzip musl libc
      run:
        wget http://musl.libc.org/releases/musl-1.2.3.tar.gz;
        tar -xvf musl-1.2.3.tar.gz -C ${{github.workspace}}
    - name: Build musl libc
      run:
        cd ${{github.workspace}}/musl-1.2.3;
        mkdir -p ${{github.workspace}}/musl;
        ./configure --prefix=${{github.workspace}}/musl target=aarch64 && make target=aarch64 && make install
    - name: Download and unzip aarch64-none-linux-gnu
      run:
        wget https://snapshots.linaro.org/gnu-toolchain/13.0-2022.10-1/aarch64-linux-gnu/gcc-linaro-13.0.0-2022.10-x86_64_aarch64-linux-gnu.tar.xz;
        tar -xvf gcc-linaro-13.0.0-2022.10-x86_64_aarch64-linux-gnu.tar.xz -C ${{github.workspace}}
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run:
        ls ${{github.workspace}}/musl/bin;
        mkdir -p ${{github.workspace}}/build;
        export CC="${{github.workspace}}/musl/bin/musl-gcc";
        cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      run:
        export CC="${{github.workspace}}/musl/bin/musl-gcc";
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    - name: Copy files into modules directory
      run:
        cp -af ${{ github.workspace }}/build/accurate_battery ${{ github.workspace }}/modules/accurate_battery/common/accurate_battery;
        cp -af ${{ github.workspace }}/build/accurate_battery_no_trickle ${{ github.workspace }}/modules/accurate_battery_no_trickle/common/accurate_battery_no_trickle
    - name : Zip accurate_battery and upload
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: accurate_battery
        path: ${{ github.workspace }}/modules/accurate_battery/*
    - name : Zip accurate_battery_no_trickle and upload
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: accurate_battery_no_trickle
        path: ${{ github.workspace }}/modules/accurate_battery_no_trickle/*
